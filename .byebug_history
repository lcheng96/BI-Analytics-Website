c
n
c
Admin.create(username: "admin", password: "tempPass", password_confirmation:"tempPass")
Admin.create(name: "admin", password: "tempPass", password_confirmation:"tempPass")
Admin.delete_all
c
Admin.create(username: "admin", password: "tempPass", password_confirmation:"tempPass")
Admin.create(name: "admin", password: "tempPass", password_confirmation:"tempPass")
Admin.all
temp.delete
temp.save
temp.password_digest = "test"
temp.save!
temp.save
temp.password_digest = nil
temp = Admin.find(1)
Admin.find(1)
c
params[:admin][:username]
params[:admin]
params
c
params[:admin]
params
c
n
Admin.all
temp.save
temp.create
temp
temp.password = "tempPass"
temp.username = "admin"
temp = Admin.new
Admin.all
c
 Location.where('region like :search', search: "%#{search}%")
 Location.where('region like :search', search: "#{search}")
 Location.where('region like :search', search: "#%{search}%")
search
Location.first.region
 Location.where('institution like :search OR region like :search', search: "#%{search}%")
@project
 c
c
temp.save
temp.region = "Europe"
temp = Location.find(9)
temp.save
temp.region = "Europe"
temp = Location.find(8)
temp.save
temp.region = "North America"
temp = Location.find(7)
temp.save
temp.region = "North America"
temp = Location.find(6)
temp.save
temp.region = "North America"
temp = Location.find(5)
temp.save
temp.region = "North America"
temp = Location.find(4)
temp.save
temp.region = "North America"
temp = Location.find(3)
Location.second.region
Project.second
Project.second.region
temp.save
temp.region = "Europe"
temp
Location.first.region
temp.region
temp = Location.second
Location.all
Locations.all
c
exit
c
@projects
@projects << project
@projects << project; @projects.save
@projects
@projects << project
@project << project
project.external_view
if(project.external_view
if(project.external_view) puts "test"l end
if(project.external_view) 1; end
if(project.external_view) 1 end
if(project.external_view) puts "test" end
if(project.external_view)
project
@projects
n
@projects
search_results
c
Project.first.external_view
Project.update_all external_view: true
Project.all.update(temp)
Project.update
Project.all.update = temp
Project.last.external_view
temp
temp.save
temp.save!
temp.first.external_view
temp.first
temp.each do |project| project.external_view = true end
temp.each do |project| project.external_view = true project.save! end
temp.each do |project| project.external_view = true; project.save; end
temp.each do |project| project.external_view = true; project.save end
temp.each do |project| 3*2 end
temp = Project.all
Project.first.external_view
Project.first.external_view = true; Project.first.save!
Project.first.external_view
Project.first.external_view = true
Project.first.external_view
@allProjects.each do |proj| proj.external_view = true; proj.save!; end
@allProjects.foreach do |project| project.external_view = true; project.save!; end
@allProjects.each do |project| project.external_view = true; project.save!; end
@allProjects = Project.all
c
search_results
@projects
c
Location.first.projects.count
Location.first.projects
Location.all.count
Location.first
temp.save
temp.region = "North America"
temp = Location.first
temp = Location.first.region
Location.first.region
Location.all
Project.all
c
 Person.where('name like :search', search: "%#{temp}%")
 Person.where('name like :search', search: "#{temp}")
temp = "Xiuru Sun"
 Person.where('name like :search', search: "#{search}")
 Person.where('name like :search OR :search', search: "#{search}")
 Person.where('name like :search', search: "#{search}")
n
search
c
n
s
n
@project.empty?
@project.empty>
@project
n
c
n
@project
n
m
n
search
c
Project.first.tags
Project.first.locations
Project.first.location
Project.first.people
Project.first.timelines
Project.first
c
n
@project
n
c
Timeline.where('lifecycle like :search', search: Timeline.lifecycles["#{search}"])
Timeline.lifecycles["new_student"]
Timeline.where('lifecycle like :search', search: Timeline.lifecycles["#{search}"]) == Timeline.lifecycles["new_student"]
Timeline.where('lifecycle like :search', search: Timeline.lifecycles["#{search}"]) == Timelines.lifecycles["new_student"]
Timeline.where('lifecycle like :search', search: Timeline.lifecycles["#{search}"]).enum
Timeline.where('lifecycle like :search', search: Timeline.lifecycles["#{search}"])
Timeline.where('lifecycle like :search', search: Timeline.lifecycles["#{search}"]).lifecycle
Timeline.where('lifecycle like :search', search: Timeline.lifecycles["#{search}"])
Timeline.where('lifecycle like :search', search: Timeline.lifecycles[#{search})
Timeline.where('lifecycle like :search', search: #{search})
Timeline.where('lifecycle like :search', search: "3")
Timeline.where('lifecycle like :search', search: "#{search}")
@project
n
c
search
@project
n
@project
n
c
@project.timelines.first == @project.timelines.last
@project.timelines.count
@project.timelines
n
@project.timelines
@project.timelines << Timeline.where('lifecycle = ?', [input_timeline[:timeline][:lifecycle]])
@project.timelines
Timeline.where('lifecycle = ?', [input_timeline[:timeline][:lifecycle]])
Timeline.where('lifecycle = ?', Timeline.lifecycles[input_timeline[:timeline][:lifecycle]])
input_timeline
n
c
Timeline.where(lifecycles: input_timeline[:timeline][:lifecycle])
Timeline.where(lifecycles: input_timeline[:timeline][:lifecyc)
 Timeline.where
@project.timelines << Timeline.where(lifecycles: input_timeline[:timeline][:lifecycle])
@project.timelines << Timeline.where('lifecycles = ?', input_timeline[:timeline][:lifecycle])
@project.timelines
@project.timelines << Timeline.where('lifecycles = ?', input_timeline[:timeline][:lifecycle])
Timeline.where('lifecycles = ?', input_timeline[:timeline][:lifecycle])
Timeline.where('lifecycles = ?', input_timeline[:timeline][:lifecycle]])
Timeline.lifecycles["prospect"]
Timeline.lifecycles[2]
Timeline.lifecycles[input_timeline[:timeline][:lifecycle]]
Timeline.lifecycles
Timeline.lifecycles[]
Timeline.lifecycles[input_timeline[:timeline][:lifecycle]]
input_timeline[:timeline][:lifecycle]
Timeline.where('lifecycle = ?', Timeline.lifecycles[input_timeline[:timeline][:lifecycle]])
input_timeline
Timeline.where('lifecycle = ?', Timeline.lifecycles[input_timeline[:timeline][:lifecycle]])
@project.timelines
n
@project
input_timeline[:timeline]
input_timeline[:lifecycle]
input_timeline.lifecycle
input_timeline
n
c
Timeline.fifth.lifecycle
Timeline.fifth.projects
Tag.where(keyword: "Walden")
Tag.where(keyword: "Walden").methods?
Tag.where(keyword: "Walden").id
Tag.where(keyword: "Walden")
Tag.where(keyword: "Walden").projects
Tag.where(keyword: "Walden")
Timeline.first.projects
Timelines.first
Tag.first.projects
Project.first.timelines
Timeline.where(lifecycle: 1).projects
Timeline.where(lifecycle: 1)
Timeline.where(timelines.lifecycle = 1)
Timeline.where(timeline.lifecycle = 1)
Timeline.where('lifecycle' == '2')
Timeline.where('lifecycle' == '1')
Timeline.where('lifecycle' = '1')
